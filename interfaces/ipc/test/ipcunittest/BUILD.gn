# Copyright (c) 2022-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import(
    "//foundation/distributedhardware/distributed_input/distributedinput.gni")

module_out_path = "distributed_input/ipc"

group("ipcunittest") {
  testonly = true

  deps = [ ":distributed_input_ipc_test" ]
}

## UnitTest distributed_input_ipc_test {{{
ohos_unittest("distributed_input_ipc_test") {
  module_out_path = module_out_path

  include_dirs = [
    "${common_path}/include",
    "${frameworks_path}/include",
    "${innerkits_path}/include",
    "${innerkits_path}/src",
    "${ipc_path}/include",
    "${ipc_path}/src",
    "${utils_path}/include",
  ]

  sources = [
    "${common_path}/include/input_check_param.cpp",
    "${common_path}/include/white_list_util.cpp",
    "${ipc_path}/src/add_white_list_infos_call_back_proxy.cpp",
    "${ipc_path}/src/add_white_list_infos_call_back_stub.cpp",
    "${ipc_path}/src/del_white_list_infos_call_back_proxy.cpp",
    "${ipc_path}/src/del_white_list_infos_call_back_stub.cpp",
    "${ipc_path}/src/dinput_sa_manager.cpp",
    "${ipc_path}/src/distributed_input_client.cpp",
    "${ipc_path}/src/distributed_input_sink_proxy.cpp",
    "${ipc_path}/src/distributed_input_sink_stub.cpp",
    "${ipc_path}/src/distributed_input_source_proxy.cpp",
    "${ipc_path}/src/distributed_input_source_stub.cpp",
    "${ipc_path}/src/get_sink_screen_infos_call_back_proxy.cpp",
    "${ipc_path}/src/get_sink_screen_infos_call_back_stub.cpp",
    "${ipc_path}/src/input_node_listener_proxy.cpp",
    "${ipc_path}/src/input_node_listener_stub.cpp",
    "${ipc_path}/src/prepare_d_input_call_back_proxy.cpp",
    "${ipc_path}/src/prepare_d_input_call_back_stub.cpp",
    "${ipc_path}/src/register_d_input_call_back_proxy.cpp",
    "${ipc_path}/src/register_d_input_call_back_stub.cpp",
    "${ipc_path}/src/sharing_dhid_listener_proxy.cpp",
    "${ipc_path}/src/sharing_dhid_listener_stub.cpp",
    "${ipc_path}/src/simulation_event_listener_proxy.cpp",
    "${ipc_path}/src/simulation_event_listener_stub.cpp",
    "${ipc_path}/src/start_d_input_call_back_proxy.cpp",
    "${ipc_path}/src/start_d_input_call_back_stub.cpp",
    "${ipc_path}/src/start_stop_d_inputs_call_back_proxy.cpp",
    "${ipc_path}/src/start_stop_d_inputs_call_back_stub.cpp",
    "${ipc_path}/src/start_stop_result_call_back_proxy.cpp",
    "${ipc_path}/src/start_stop_result_call_back_stub.cpp",
    "${ipc_path}/src/stop_d_input_call_back_proxy.cpp",
    "${ipc_path}/src/stop_d_input_call_back_stub.cpp",
    "${ipc_path}/src/unprepare_d_input_call_back_proxy.cpp",
    "${ipc_path}/src/unprepare_d_input_call_back_stub.cpp",
    "${ipc_path}/src/unregister_d_input_call_back_proxy.cpp",
    "${ipc_path}/src/unregister_d_input_call_back_stub.cpp",
    "distributed_input_ipc_test.cpp",
  ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
    "-Dprotected=public",
  ]

  defines = [
    "HI_LOG_ENABLE",
    "DH_LOG_TAG=\"distributedinpututtest\"",
    "LOG_DOMAIN=0xD004120",
  ]

  deps = [
    "${dfx_utils_path}:libdinput_dfx_utils",
    "${utils_path}:libdinput_utils",
  ]

  external_deps = [
    "access_token:libaccesstoken_sdk",
    "access_token:libtokenid_sdk",
    "c_utils:utils",
    "config_policy:configpolicy_util",
    "distributed_hardware_fwk:distributed_av_receiver",
    "distributed_hardware_fwk:distributed_av_sender",
    "distributed_hardware_fwk:distributedhardwareutils",
    "distributed_hardware_fwk:libdhfwk_sdk",
    "dsoftbus:softbus_client",
    "eventhandler:libeventhandler",
    "hilog:libhilog",
    "ipc:ipc_core",
    "json:nlohmann_json_static",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]

  cflags_cc = [ "-DHILOG_ENABLE" ]
}
## UnitTest distributed_input_ipc_test }}}
