# Copyright (c) 2021-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import(
    "//foundation/distributedhardware/distributed_input/distributedinput.gni")

module_out_path = "distributed_input/sink_trans"

group("sinktransunittest") {
  testonly = true

  deps = [ ":distributed_input_sinktrans_test" ]
}

## UnitTest distributed_input_manager_service_test {{{
ohos_unittest("distributed_input_sinktrans_test") {
  module_out_path = module_out_path

  include_dirs = [
    "${av_transport_path}/common/include",
    "${services_sink_path}/transport/include",
    "${distributedinput_path}/services/transportbase/include",
    "${common_path}/include",
    "${fwk_common_path}/log/include",
    "${fwk_common_path}/utils/include",
    "${frameworks_path}/include",
    "${fwk_interfaces_path}/include",
    "${service_common}/include",
    "//third_party/json/include",
    "${dfx_utils_path}/include",
    "${utils_path}/include",
    "${common_path}/test/mock",
    "${services_sink_path}/sinkmanager/include",
    "${fwk_interfaces_path}/include/ipc",
    "${innerkits_path}/include",
    "${innerkits_path}/src",
    "${ipc_path}/include",
    "${ipc_path}/src",
    "${services_sink_path}/inputcollector/include",
    "${services_source_path}/inputinject/include",
    "${distributedinput_path}/inputdevicehandler/include",
    "${distributedinput_path}/services/state/include",
  ]

  sources = [
    "${common_path}/test/mock/session_mock.cpp",
    "${common_path}/test/mock/softbus_bus_center_mock.cpp",
    "${distributedinput_path}/services/transportbase/src/distributed_input_transport_base.cpp",
    "${services_sink_path}/sinkmanager/src/distributed_input_sink_manager.cpp",
    "${services_sink_path}/transport/src/distributed_input_sink_switch.cpp",
    "${services_sink_path}/transport/src/distributed_input_sink_transport.cpp",
    "distributed_input_sinktrans_test.cpp",
  ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
    "-Dprotected=public",
  ]

  defines = [
    "HI_LOG_ENABLE",
    "DH_LOG_TAG=\"distributedinpututtest\"",
    "LOG_DOMAIN=0xD004100",
  ]

  deps = [
    "${dfx_utils_path}:libdinput_dfx_utils",
    "${distributedinput_path}/services/state:libdinput_state",
    "${services_sink_path}/inputcollector:libdinput_collector",
    "${services_sink_path}/sinkmanager:libdinput_sink",
    "${utils_path}:libdinput_utils",
    "//third_party/libevdev:libevdev",
  ]

  external_deps = [
    "c_utils:utils",
    "distributed_hardware_fwk:libdhfwk_sdk",
    "eventhandler:libeventhandler",
    "graphic_2d:surface",
    "hicollie:libhicollie",
    "hisysevent:libhisysevent",
    "hitrace:hitrace_meter",
    "ipc:ipc_core",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
    "window_manager:libdm",
  ]

  cflags_cc = [ "-DHILOG_ENABLE" ]
}
## UnitTest distributed_input_manager_service_test }}}
